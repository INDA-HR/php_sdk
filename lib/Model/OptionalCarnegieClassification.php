<?php
/**
 * OptionalCarnegieClassification
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * INDA HR - INtelligent Data Analysis for HR
 *
 * # Introduction  **INDA (INtelligent Data Analysis)** is an [Intervieweb](https://www.intervieweb.it/hrm/)  AI solution provided as a RESTful API.  The INDA pricing model is *credits-based*, which means that a certain number of credits is associated to each API request. Hence, users have to purchase a certain amount of credits (established according to their needs) which will be reduced  at each API call. INDA accepts and processes a user's request only if their credits quota is grater than - or,  at least, equal to - the number of credits required by that request. To obtain further details on the pricing, please visit our [site](https://inda.ai) or contact us.    INDA HR embraces a wide range of functionalities to manage the main elements of a recruitment process:   + [**candidate**](https://api.inda.ai/hr/docs/v2/#tag/Resume-Management) (hereafter also referred to as **resume** or **applicant**), or rather a  person looking for a job;  + [**job advertisement**](https://api.inda.ai/hr/docs/v2/#tag/JobAd-Management) (hereafter also referred to as **job ad**), which is a document   that collects all the main information and details about a job vacancy;  + [**application**](https://api.inda.ai/hr/docs/v2/#tag/Application-Management), that binds candidates to job ads; it is generated whenever a  candidate applies for a job.  Each of them has a specific set of methods that grants users the ability to create, read, update and delete the relative  documents, plus some special features based on AI approaches (such as *document parsing* or *semantic search*). They can be explored in their respective sections.  Data about the listed document types can be enriched by connecting them to other INDA supported entities, such as  [**companies**](https://api.inda.ai/hr/docs/v2/#tag/Company-Management) and [**universities**](https://api.inda.ai/hr/docs/v2/#tag/Universities), so that recruiters may  get a better and more detailed idea on the candidates' experiences and acquired skills.  All the functionalities mentioned above are meant to help recruiters during the talent acquisition process,  by exploiting the power of AI systems. Among the advantages a recruiter has by using this kind of systems, tackling the bias problem is surely one of the  most relevant. Bias in recruitment is a serious issue that affect both recruiters and candidates, since it may cause wrong hiring  decisions. As we care a lot about this problem, we are constantly working on reduce the bias in original data so that INDA  results may be as fair as possible. As of now, in order to tackle the bias issue, INDA automatically ignores specific fields (such as name, gender, age  and nationality) during the initial processing of each candidate data.  Furthermore, we decided to let users collect data of various types, including personal or sensitive details, but we  do not allow their usage if it is different from statistical purposes; our aim is to discourage recruiters from  focusing on candidates' personal information, and to put their attention on the candidate's skills and abilities.    We want to help recruiters to prevent any kind of bias while searching for the most valuable candidates they really need.    The following documentation is addressed both to developers, in order to provide all technical details for INDA integration, and to managers, to guide them in the exploration of the implementation possibilities.  The host of the API is [https://api.inda.ai/hr/v2/](https://api.inda.ai/hr/v2/). We recommend to check the API version and build (displayed near the documentation title). You can contact us at support@intervieweb.it in case of problems, suggestions, or particular needs.  The search panel on the left can be used to navigate through the documentation and provides an overview of the API structure. On the right, you can find (*i*) the url of the method, (*ii*) an example of request body (if present), and (*iii*) an example of response for each response code. Finally, in the central section of each API method, you can find (*i*) a general description of the purpose of the method, (*ii*) details on parameters and request body schema (if present), and (*iii*) details on response schema, error models, and error codes.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@intervieweb.it
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * OptionalCarnegieClassification Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class OptionalCarnegieClassification implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OptionalCarnegieClassification';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'basic_classification' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        '_2000_classification' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        'size_setting' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        'enrollment_profile' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        'undergraduate_profile' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        'undergraduate_instructional_program' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr',
        'graduate_instructional_program' => '\OpenAPI\Client\Model\UniversityAdmissionsValueModelStr'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'basic_classification' => null,
        '_2000_classification' => null,
        'size_setting' => null,
        'enrollment_profile' => null,
        'undergraduate_profile' => null,
        'undergraduate_instructional_program' => null,
        'graduate_instructional_program' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'basic_classification' => 'BasicClassification',
        '_2000_classification' => '2000Classification',
        'size_setting' => 'Size&amp;Setting',
        'enrollment_profile' => 'EnrollmentProfile',
        'undergraduate_profile' => 'UndergraduateProfile',
        'undergraduate_instructional_program' => 'UndergraduateInstructionalProgram',
        'graduate_instructional_program' => 'GraduateInstructionalProgram'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'basic_classification' => 'setBasicClassification',
        '_2000_classification' => 'set2000Classification',
        'size_setting' => 'setSizeSetting',
        'enrollment_profile' => 'setEnrollmentProfile',
        'undergraduate_profile' => 'setUndergraduateProfile',
        'undergraduate_instructional_program' => 'setUndergraduateInstructionalProgram',
        'graduate_instructional_program' => 'setGraduateInstructionalProgram'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'basic_classification' => 'getBasicClassification',
        '_2000_classification' => 'get2000Classification',
        'size_setting' => 'getSizeSetting',
        'enrollment_profile' => 'getEnrollmentProfile',
        'undergraduate_profile' => 'getUndergraduateProfile',
        'undergraduate_instructional_program' => 'getUndergraduateInstructionalProgram',
        'graduate_instructional_program' => 'getGraduateInstructionalProgram'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['basic_classification'] = $data['basic_classification'] ?? null;
        $this->container['_2000_classification'] = $data['_2000_classification'] ?? null;
        $this->container['size_setting'] = $data['size_setting'] ?? null;
        $this->container['enrollment_profile'] = $data['enrollment_profile'] ?? null;
        $this->container['undergraduate_profile'] = $data['undergraduate_profile'] ?? null;
        $this->container['undergraduate_instructional_program'] = $data['undergraduate_instructional_program'] ?? null;
        $this->container['graduate_instructional_program'] = $data['graduate_instructional_program'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets basic_classification
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getBasicClassification()
    {
        return $this->container['basic_classification'];
    }

    /**
     * Sets basic_classification
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $basic_classification basic_classification
     *
     * @return self
     */
    public function setBasicClassification($basic_classification)
    {
        $this->container['basic_classification'] = $basic_classification;

        return $this;
    }

    /**
     * Gets _2000_classification
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function get2000Classification()
    {
        return $this->container['_2000_classification'];
    }

    /**
     * Sets _2000_classification
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $_2000_classification _2000_classification
     *
     * @return self
     */
    public function set2000Classification($_2000_classification)
    {
        $this->container['_2000_classification'] = $_2000_classification;

        return $this;
    }

    /**
     * Gets size_setting
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getSizeSetting()
    {
        return $this->container['size_setting'];
    }

    /**
     * Sets size_setting
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $size_setting size_setting
     *
     * @return self
     */
    public function setSizeSetting($size_setting)
    {
        $this->container['size_setting'] = $size_setting;

        return $this;
    }

    /**
     * Gets enrollment_profile
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getEnrollmentProfile()
    {
        return $this->container['enrollment_profile'];
    }

    /**
     * Sets enrollment_profile
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $enrollment_profile enrollment_profile
     *
     * @return self
     */
    public function setEnrollmentProfile($enrollment_profile)
    {
        $this->container['enrollment_profile'] = $enrollment_profile;

        return $this;
    }

    /**
     * Gets undergraduate_profile
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getUndergraduateProfile()
    {
        return $this->container['undergraduate_profile'];
    }

    /**
     * Sets undergraduate_profile
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $undergraduate_profile undergraduate_profile
     *
     * @return self
     */
    public function setUndergraduateProfile($undergraduate_profile)
    {
        $this->container['undergraduate_profile'] = $undergraduate_profile;

        return $this;
    }

    /**
     * Gets undergraduate_instructional_program
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getUndergraduateInstructionalProgram()
    {
        return $this->container['undergraduate_instructional_program'];
    }

    /**
     * Sets undergraduate_instructional_program
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $undergraduate_instructional_program undergraduate_instructional_program
     *
     * @return self
     */
    public function setUndergraduateInstructionalProgram($undergraduate_instructional_program)
    {
        $this->container['undergraduate_instructional_program'] = $undergraduate_instructional_program;

        return $this;
    }

    /**
     * Gets graduate_instructional_program
     *
     * @return \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null
     */
    public function getGraduateInstructionalProgram()
    {
        return $this->container['graduate_instructional_program'];
    }

    /**
     * Sets graduate_instructional_program
     *
     * @param \OpenAPI\Client\Model\UniversityAdmissionsValueModelStr|null $graduate_instructional_program graduate_instructional_program
     *
     * @return self
     */
    public function setGraduateInstructionalProgram($graduate_instructional_program)
    {
        $this->container['graduate_instructional_program'] = $graduate_instructional_program;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


